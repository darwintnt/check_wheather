{"version":3,"sources":["components/modules/Header.js","components/modules/Form.js","components/modules/ResultCard.js","components/Wheater.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","Form","city","React","createRef","country","search","e","preventDefault","data","_this","current","value","searchData","onSubmit","this","htmlFor","type","ref","defaultValue","Component","ResultCard","showResponse","_this$props$response","response","name","weather","main","sys","wind","urlIcon","concat","icon","altIcon","sunrise","moment","unix","format","sunset","src","alt","temp","toFixed","temp_min","temp_max","humidity","pressure","speed","description","Wheater","state","wheaterApi","_this$state$search","url","fetch","then","res","json","cod","Swal","fire","message","setState","catch","error","console","log","prevProps","prevState","modules_Header","modules_Form","modules_ResultCard","Boolean","window","location","hostname","match","ReactDOM","render","components_Wheater","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46cb3437.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n      return(\r\n\r\n         <div className=\"header uk-text-center\">\r\n\r\n            <h1 className=\"title\">{props.title}</h1>\r\n\r\n         </div>\r\n\r\n      )\r\n}\r\n\r\nHeader.propTypes = {\r\n   title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Form extends Component {\r\n\r\n\r\n   city     = React.createRef();\r\n   country  = React.createRef();\r\n\r\n\r\n   search = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      const data = {\r\n         city: this.city.current.value,\r\n         country: this.country.current.value,\r\n      }\r\n      \r\n\r\n      this.props.searchData(data);\r\n      \r\n\r\n   }\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n         <div>\r\n\r\n            <form onSubmit={this.search}>\r\n               <div className=\"uk-child-width-1-3@m uk-grid uk-grid-small\">\r\n                  <div className=\"uk-form-controls\">\r\n                        <label htmlFor=\"city\">Ciudad</label>\r\n                        <input type=\"text\" className=\"uk-input\" ref={this.city} />\r\n                  </div>\r\n\r\n                  <div className=\"uk-form-controls\">\r\n                     <label htmlFor=\"country\">Pais</label>\r\n                     <select type=\"text\" className=\"uk-select\" ref={this.country}>\r\n                        <option value=\"\" defaultValue>Elige un país</option>\r\n                        <option value=\"AR\">Argentina</option>\r\n                        <option value=\"CO\">Colombia</option>\r\n                        <option value=\"CR\">Costa Rica</option>\r\n                        <option value=\"ES\">España</option>\r\n                        <option value=\"US\">Estados Unidos</option>\r\n                        <option value=\"MX\">México</option>\r\n                        <option value=\"PE\">Perú</option>\r\n                     </select>\r\n                  </div>\r\n\r\n                  <div className=\"margin-button-search\">\r\n                     <button className=\"uk-button uk-button-primary uk-width-1-1@m\">Consultar</button>\r\n                  </div>\r\n\r\n               </div>\r\n            </form>\r\n\r\n         </div>\r\n\r\n\r\n      )\r\n   }\r\n}\r\n\r\nForm.propTypes = {\r\n   searchData: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\nclass ResultCard extends Component {\r\n\r\n   showResponse = () => {\r\n\r\n      const { name, weather, main, sys, wind } = this.props.response;\r\n\r\n      if(!name || !weather || !main || !sys || !wind){\r\n         return null\r\n      }\r\n\r\n      const kelvin = 273.15;\r\n      const urlIcon = `http://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n      const altIcon = `Clima de ${name}`;\r\n      const sunrise = moment.unix(sys.sunrise).format(\"h:mm:ss a\");\r\n      const sunset = moment.unix(sys.sunset).format(\"h:mm:ss a\");\r\n\r\n      return (\r\n         \r\n            <div className=\"uk-card uk-card-default uk-width-1-3@m uk-text-center card\">\r\n               <div className=\"uk-card-header\">\r\n                  <div className=\"uk-grid-small uk-flex-middle uk-grid\">\r\n                        <div className=\"uk-width-auto\">\r\n                           <img src={urlIcon} alt={altIcon}/>\r\n                        </div>\r\n                        <div className=\"uk-width-expand\">\r\n                           <h3 className=\"uk-card-title uk-margin-remove-bottom uk-text-bold\">{name} { (main.temp - kelvin).toFixed(0) } °C</h3>\r\n                        </div>\r\n                  </div>\r\n               </div>\r\n               <div className=\"uk-card-body uk-child-width-1-2@m uk-grid uk-grid-small uk-text-left\">\r\n\r\n                  <div>\r\n                     <p><span className=\"uk-text-bold\">Temp. Min:</span>  { (main.temp_min - kelvin).toFixed(0) } °C</p>\r\n                     <p><span className=\"uk-text-bold\">Temp. Max:</span>  { (main.temp_max - kelvin).toFixed(0) } °C</p>\r\n                     <p><span className=\"uk-text-bold\">Amanecer:</span>  { sunrise } </p>\r\n                     <p><span className=\"uk-text-bold\">Atardecer:</span>  { sunset } </p>\r\n                  </div>\r\n\r\n                  <div>\r\n                     <p><span className=\"uk-text-bold\">Humedad:</span> { main.humidity } %</p>\r\n                     <p><span className=\"uk-text-bold\">Presión:</span> { main.pressure } mb</p>\r\n                     <p><span className=\"uk-text-bold\">Vel. viento:</span> { (wind.speed * 3.6).toFixed(2) } Km/h</p>\r\n\r\n                  </div>\r\n               </div>\r\n               <div className=\"uk-card-footer\">\r\n                  <p>Estado del clima hoy: <span className=\"uk-text-bold uk-text-uppercase\">{ weather[0].description }</span>  </p>\r\n               </div>\r\n            </div>\r\n        \r\n      )\r\n   }\r\n\r\n   render(){\r\n\r\n      return(\r\n         <div className=\"card-container\">         \r\n            { this.showResponse() }\r\n         </div>\r\n         \r\n\r\n\r\n      )\r\n   }\r\n}\r\n\r\n\r\nResultCard.propTypes = {\r\n   response: PropTypes.object.isRequired  \r\n}\r\n\r\nexport default ResultCard","import React, { Component } from 'react';\r\nimport Header from './modules/Header';\r\nimport Form from './modules/Form';\r\nimport Swal from 'sweetalert2';\r\nimport ResultCard from './modules/ResultCard';\r\n\r\n\r\n\r\nclass Wheater extends Component {\r\n\r\n   state = {\r\n      search : {},\r\n      response: {}\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState){\r\n\r\n      if(prevState.search !== this.state.search) {\r\n         this.wheaterApi();\r\n      }\r\n   }\r\n\r\n   wheaterApi = () => {\r\n\r\n      const {city, country} = this.state.search;\r\n\r\n      const appId = 'c360862ba8a4c52dea058a0b18bfce58';\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${appId}`;\r\n\r\n      fetch(url)\r\n         .then( res => {\r\n            return res.json();\r\n         })\r\n         .then( data => {\r\n            // eslint-disable-next-line\r\n            if(data.cod != '200') {\r\n               Swal.fire(\r\n                  'Error',\r\n                  `${(data.message)}`,\r\n                  'error'\r\n               )\r\n            }\r\n\r\n            this.setState({\r\n               response: data\r\n            })\r\n         })\r\n         .catch( error => {\r\n            console.log(error);\r\n         })    \r\n   }\r\n\r\n\r\n   searchData = (data) => {\r\n\r\n      if(data.city === '' || data.country === ''){\r\n         Swal.fire(\r\n            'Error',\r\n            'Todos los campos son obligatorios',\r\n            'error'\r\n         )\r\n         } else {\r\n\r\n         this.setState({\r\n            search: data\r\n         })\r\n\r\n      }\r\n\r\n   }\r\n\r\n   render(){\r\n\r\n      return(\r\n\r\n      <div className=\"uk-container-large container\">\r\n\r\n         <Header title='Consultar Clima' />\r\n\r\n         <div className=\"uk-card uk-card-default uk-padding\">        \r\n            <Form searchData= {this.searchData} />            \r\n         </div>\r\n\r\n         <div>        \r\n            <ResultCard response={this.state.response} />            \r\n         </div>\r\n         \r\n      </div>\r\n\r\n\r\n      );\r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Wheater;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Wheater from './components/Wheater';\nimport '../src/css/wheater.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Wheater />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}